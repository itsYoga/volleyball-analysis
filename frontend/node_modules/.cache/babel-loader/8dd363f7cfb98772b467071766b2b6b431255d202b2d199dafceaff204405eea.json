{"ast":null,"code":"import axios from 'axios';\n\n// API基礎URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// 創建axios實例\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000 // 30秒超時\n});\n\n// 請求攔截器\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API請求: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 響應攔截器\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('API錯誤:', error);\n  return Promise.reject(error);\n});\n\n// API接口定義\n\n// API函數\nexport const apiService = {\n  // 健康檢查\n  async healthCheck() {\n    const response = await api.get('/health');\n    return response.data;\n  },\n  // 上傳影片\n  async uploadVideo(file) {\n    const response = await api.post('/upload', file, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // 開始分析\n  async startAnalysis(videoId) {\n    const response = await api.post(`/analyze/${videoId}`);\n    return response.data;\n  },\n  // 獲取所有影片\n  async getVideos() {\n    const response = await api.get('/videos');\n    return response.data;\n  },\n  // 獲取特定影片\n  async getVideo(videoId) {\n    const response = await api.get(`/videos/${videoId}`);\n    return response.data;\n  },\n  // 獲取分析任務狀態\n  async getAnalysisStatus(taskId) {\n    const response = await api.get(`/analysis/${taskId}`);\n    return response.data;\n  },\n  // 獲取分析結果\n  async getAnalysisResults(videoId) {\n    const response = await api.get(`/results/${videoId}`);\n    return response.data;\n  },\n  // 播放影片\n  getVideoUrl(videoId) {\n    return `${API_BASE_URL}/play/${videoId}`;\n  }\n};\n\n// 導出便捷函數\nexport const uploadVideo = apiService.uploadVideo;\nexport const startAnalysis = apiService.startAnalysis;\nexport const getVideos = apiService.getVideos;\nexport const getVideo = apiService.getVideo;\nexport const getAnalysisStatus = apiService.getAnalysisStatus;\nexport const getAnalysisResults = apiService.getAnalysisResults;\nexport const getVideoUrl = apiService.getVideoUrl;\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","apiService","healthCheck","get","data","uploadVideo","file","post","headers","startAnalysis","videoId","getVideos","getVideo","getAnalysisStatus","taskId","getAnalysisResults","getVideoUrl"],"sources":["/Users/jesse/Documents/專題/volleyball_analysis_webapp/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// API基礎URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// 創建axios實例\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30秒超時\n});\n\n// 請求攔截器\napi.interceptors.request.use(\n  (config) => {\n    console.log(`API請求: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 響應攔截器\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API錯誤:', error);\n    return Promise.reject(error);\n  }\n);\n\n// API接口定義\nexport interface Video {\n  id: string;\n  filename: string;\n  file_path: string;\n  upload_time: string;\n  status: 'uploaded' | 'processing' | 'completed' | 'failed';\n  file_size: number;\n  task_id?: string;\n  analysis_time?: string;\n}\n\nexport interface AnalysisTask {\n  video_id: string;\n  status: 'processing' | 'completed' | 'failed';\n  start_time: string;\n  progress: number;\n  end_time?: string;\n  error?: string;\n}\n\nexport interface AnalysisResults {\n  video_info: {\n    width: number;\n    height: number;\n    fps: number;\n    total_frames: number;\n    duration: number;\n  };\n  ball_tracking: {\n    trajectory: Array<{\n      frame: number;\n      timestamp: number;\n      center: [number, number];\n      bbox: [number, number, number, number];\n      confidence: number;\n    }>;\n    detected_frames: number;\n    total_frames: number;\n  };\n  action_recognition: {\n    actions: Array<{\n      frame: number;\n      timestamp: number;\n      bbox: [number, number, number, number];\n      confidence: number;\n      action: string;\n    }>;\n    action_counts: Record<string, number>;\n    total_actions: number;\n  };\n  analysis_time: number;\n}\n\n// API函數\nexport const apiService = {\n  // 健康檢查\n  async healthCheck() {\n    const response = await api.get('/health');\n    return response.data;\n  },\n\n  // 上傳影片\n  async uploadVideo(file: FormData) {\n    const response = await api.post('/upload', file, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // 開始分析\n  async startAnalysis(videoId: string) {\n    const response = await api.post(`/analyze/${videoId}`);\n    return response.data;\n  },\n\n  // 獲取所有影片\n  async getVideos() {\n    const response = await api.get('/videos');\n    return response.data;\n  },\n\n  // 獲取特定影片\n  async getVideo(videoId: string) {\n    const response = await api.get(`/videos/${videoId}`);\n    return response.data;\n  },\n\n  // 獲取分析任務狀態\n  async getAnalysisStatus(taskId: string) {\n    const response = await api.get(`/analysis/${taskId}`);\n    return response.data;\n  },\n\n  // 獲取分析結果\n  async getAnalysisResults(videoId: string) {\n    const response = await api.get(`/results/${videoId}`);\n    return response.data;\n  },\n\n  // 播放影片\n  getVideoUrl(videoId: string) {\n    return `${API_BASE_URL}/play/${videoId}`;\n  },\n};\n\n// 導出便捷函數\nexport const uploadVideo = apiService.uploadVideo;\nexport const startAnalysis = apiService.startAnalysis;\nexport const getVideos = apiService.getVideos;\nexport const getVideo = apiService.getVideo;\nexport const getAnalysisStatus = apiService.getAnalysisStatus;\nexport const getAnalysisResults = apiService.getAnalysisResults;\nexport const getVideoUrl = apiService.getVideoUrl;\n\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}